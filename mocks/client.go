// Code generated by MockGen. DO NOT EDIT.
// Source: client.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	mongo "go.mongodb.org/mongo-driver/mongo"
	options "go.mongodb.org/mongo-driver/mongo/options"
)

// MockMongoClientInterface is a mock of MongoClientInterface interface.
type MockMongoClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMongoClientInterfaceMockRecorder
}

// MockMongoClientInterfaceMockRecorder is the mock recorder for MockMongoClientInterface.
type MockMongoClientInterfaceMockRecorder struct {
	mock *MockMongoClientInterface
}

// NewMockMongoClientInterface creates a new mock instance.
func NewMockMongoClientInterface(ctrl *gomock.Controller) *MockMongoClientInterface {
	mock := &MockMongoClientInterface{ctrl: ctrl}
	mock.recorder = &MockMongoClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMongoClientInterface) EXPECT() *MockMongoClientInterfaceMockRecorder {
	return m.recorder
}

// Database mocks base method.
func (m *MockMongoClientInterface) Database(name string, opts ...*options.DatabaseOptions) *mongo.Database {
	m.ctrl.T.Helper()
	varargs := []interface{}{name}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Database", varargs...)
	ret0, _ := ret[0].(*mongo.Database)
	return ret0
}

// Database indicates an expected call of Database.
func (mr *MockMongoClientInterfaceMockRecorder) Database(name interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{name}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Database", reflect.TypeOf((*MockMongoClientInterface)(nil).Database), varargs...)
}

// Ping mocks base method.
func (m *MockMongoClientInterface) Ping(ctx context.Context) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", ctx)
	ret0, _ := ret[0].(error)
	return ret0
}

// Ping indicates an expected call of Ping.
func (mr *MockMongoClientInterfaceMockRecorder) Ping(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockMongoClientInterface)(nil).Ping), ctx)
}
